---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: cryptocom/chain-test:latest
  pull: if-not-exists
  commands:
  - export CARGO_HOME=$PWD/drone/cargo
  - export CARGO_TARGET_DIR=$PWD/drone/target
  - ./docker/build.sh

- name: unit-tests
  image: cryptocom/chain-test:latest
  pull: if-not-exists
  commands:
  - export CARGO_HOME=$PWD/drone/cargo
  - export CARGO_TARGET_DIR=$PWD/drone/target
  - cargo test

- name: integration-tests
  image: cryptocom/chain-test:latest
  pull: if-not-exists
  privileged: true
  volumes:
  - name: sgx
    path: /dev/sgx
  environment:
    SPID:
      from_secret: SPID
    IAS_API_KEY:
      from_secret: IAS_API_KEY
  commands:
  - export CARGO_TARGET_DIR=$PWD/drone/target
  - export PYTHON_VENV_DIR=$PWD/drone/venv
  - LD_LIBRARY_PATH=/opt/intel/libsgx-enclave-common/aesm /opt/intel/libsgx-enclave-common/aesm/aesm_service
  - ./integration-tests/run.sh

- name: multinode-tests
  image: cryptocom/chain-test:latest
  pull: if-not-exists
  privileged: true
  volumes:
  - name: sgx
    path: /dev/sgx
  environment:
    SPID:
      from_secret: SPID
    IAS_API_KEY:
      from_secret: IAS_API_KEY
  commands:
  - export CARGO_TARGET_DIR=$PWD/drone/target
  - export PYTHON_VENV_DIR=$PWD/drone/venv
  - LD_LIBRARY_PATH=/opt/intel/libsgx-enclave-common/aesm /opt/intel/libsgx-enclave-common/aesm/aesm_service
  - ./integration-tests/run_multinode.sh

- name: teardown
  image: cryptocom/chain-test:latest
  pull: if-not-exists
  commands:
  - ./integration-tests/cleanup.sh
  when:
    status:
      - success
      - failure

volumes:
  - name: sgx
    host:
      path: /dev/sgx

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

---
kind: pipeline
type: exec
name: sgx-cargo-1804-hw1

platform:
  os: linux
  arch: amd64

steps:
- name: Build and Test
  commands:
  - ls -l /dev/sgx
  - ls -l /var/run/aesmd/aesm.socket
  - docker run --name hw1-${DRONE_COMMIT_SHA} --rm -v $PWD:/chain --device /dev/sgx cryptocom/chain:latest /bin/bash /chain/ci-scripts/tx-validation-hw-test.sh
- name: Teardown
  commands:
   - docker stop hw1-${DRONE_COMMIT_SHA} || exit 0
  when:
    status:
      - success
      - failure

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

---
kind: pipeline
name: fuzzer

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: cryptocom/chain-test:latest
  pull: if-not-exists
  environment:
    FUZZIT_API_KEY:
      from_secret: FUZZIT_API_KEY
  commands:
  - ./ci-scripts/fuzzit.sh

trigger:
  branch:
  - master
  event:
  - push
      

---
kind: signature
hmac: 567e743e4b41fc2842d2585fe80490369e6ab1f78d6c84494db34d5fb13599c0

...
